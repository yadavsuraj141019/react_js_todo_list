{"ast":null,"code":"var _jsxFileName = \"/var/www/html/suraj/React_js/my-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [todolist, setTodolist] = useState([]);\n  let saveToDoList = event => {\n    let todoname = event.target.todoname.value;\n    if (!todolist.includes(todoname)) {\n      let finalDolist = [...todolist, todoname];\n      setTodolist(finalDolist);\n    } else {\n      alert(\"ToDo Name Already Exists....\");\n    }\n    event.preventDefault(); //using this event.preventDefault form is submitted but do not refresh pages\n  };\n  let list = todolist.map((value, index) => {\n    return /*#__PURE__*/_jsxDEV(ToDoListItems, {\n      value: value,\n      indexNumber: index,\n      todolist: todolist,\n      setTodolist: setTodolist\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: saveToDoList,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"todoname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outerDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bqb3p77lQIsy+ekYSMAglpg7ua8=\");\n_c = App;\nexport default App;\nfunction ToDoListItems({\n  value,\n  indexNumber,\n  todolist,\n  setTodolist\n}) {\n  _s2();\n  let [status, setStatus] = useState(false);\n  let deleterow = () => {\n    let finalData = todolist.filter((v, i) => i !== indexNumber);\n    setTodolist(finalData);\n  };\n  let checkStatus = () => {\n    setStatus(!status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: status ? 'completetodo' : '',\n    onClick: checkStatus,\n    children: [value, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: deleterow,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 80\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s2(ToDoListItems, \"PUJPoJ3lVdJmmX2SI+DzK2vJRtM=\");\n_c2 = ToDoListItems;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ToDoListItems\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","todolist","setTodolist","saveToDoList","event","todoname","target","value","includes","finalDolist","alert","preventDefault","list","map","index","ToDoListItems","indexNumber","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","type","name","_c","_s2","status","setStatus","deleterow","finalData","filter","v","i","checkStatus","onClick","_c2","$RefreshReg$"],"sources":["/var/www/html/suraj/React_js/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  let [todolist,setTodolist] = useState([])\n\n  let saveToDoList=(event)=>{\n\n    let todoname = event.target.todoname.value;\n    if(!todolist.includes(todoname)){\n      let finalDolist=[...todolist,todoname]\n      setTodolist(finalDolist)\n    }\n    else{\n      alert(\"ToDo Name Already Exists....\")\n    }\n\n    event.preventDefault();  //using this event.preventDefault form is submitted but do not refresh pages\n  }\n\n  let list=todolist.map((value,index)=>{\n    return(\n      <ToDoListItems value={value} key={index} indexNumber={index} todolist={todolist} setTodolist={setTodolist}/>\n    )\n  })\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      <form onSubmit={saveToDoList}>\n        <input type=\"text\" name=\"todoname\"/> <button>Save</button> \n      </form>\n    \n    <div className='outerDiv'>\n      <ul>\n        {list}\n      </ul>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction ToDoListItems({value,indexNumber,todolist,setTodolist}){\n\n  let [status,setStatus]=useState(false)\n\n  let deleterow=()=>{\n    let finalData=todolist.filter((v,i)=>i!==indexNumber)\n    setTodolist(finalData)\n  }\n\n  let checkStatus=()=>{\n    setStatus(!status)\n  }\n  \n  return(\n    <li className={(status)? 'completetodo': ''} onClick={checkStatus}>{value} <span onClick={deleterow}>&times;</span></li>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}